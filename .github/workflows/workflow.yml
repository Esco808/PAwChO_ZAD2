name: first workflow

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build_and_push:
    name: Build, test and push Docker image
    runs-on: ubuntu-latest

    steps:
        - 
            name: Check out the repository
            uses: actions/checkout@v4

        - 
            name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3

        - 
            name: Set up QEMU
            uses: docker/setup-qemu-action@v3

        - 
            name: Docker metadata
            id: meta
            uses: docker/metadata-action@v5
            with:
                images: |
                    ghcr.io/${{ github.repository_owner }}/zad2
                    docker.io/${{ vars.DOCKERHUB_USERNAME }}/zad2
                flavor: latest=false
                tags: |
                    type=semver,pattern={{version}}
                    type=sha,format=short,prefix=sha-

        - 
            name: Log in to GHCR
            uses: docker/login-action@v3
            with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GIT_TOKEN }}

        - 
            name: Log in to DockerHub
            uses: docker/login-action@v3
            with:
                username: ${{ vars.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}

        - 
            name: Build multi-arch image and export cache
            id: build
            uses: docker/build-push-action@v5
            with:
                context: .
                file: ./Dockerfile
                platforms: linux/amd64,linux/arm64
                push: false
                load: true
                cache-from: |
                    type=registry,ref=docker.io/${{ vars.DOCKERHUB_USERNAME }}/zad2_cache:latest
                cache-to: |
                    type=registry,ref=docker.io/${{ vars.DOCKERHUB_USERNAME }}/zad2_cache:latest,mode=max
                tags: ${{ steps.meta.outputs.tags }}

        - 
            name: Scan image for vulnerabilities using Trivy
            uses: aquasecurity/trivy-action@0.28.0
            with:
                image-ref: ghcr.io/${{ github.repository_owner }}/zad2@${{ steps.build.outputs.digest }}
                format: 'table'
                severity: 'CRITICAL,HIGH'
                ignore-unfixed: true
                exit-code: '1'

        - 
            name: Push Docker image if CVE scan passes
            uses: docker/build-push-action@v5
            if: success()
            with:
                context: .
                file: ./Dockerfile
                platforms: linux/amd64,linux/arm64
                push: true
                cache-from: |
                    type=registry,ref=docker.io/${{ vars.DOCKERHUB_USERNAME }}/zad2_cache:latest
                cache-to: |
                    type=registry,ref=docker.io/${{ vars.DOCKERHUB_USERNAME }}/zad2_cache:latest,mode=max
                tags: ${{ steps.meta.outputs.tags }}
